@page "/banners/delete/{id:int}"
@using Microsoft.EntityFrameworkCore
@using BlazorShop.Models.Db
@inject IDbContextFactory<BlazorShop.Models.Db.OnlineShopContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Banner</h2>
    <hr />
    @if (banner is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@banner.Title</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SubTitle</dt>
            <dd class="col-sm-10">@banner.SubTitle</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ImageName</dt>
            <dd class="col-sm-10">@banner.ImageName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Priority</dt>
            <dd class="col-sm-10">@banner.Priority</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Link</dt>
            <dd class="col-sm-10">@banner.Link</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Position</dt>
            <dd class="col-sm-10">@banner.Position</dd>
        </dl>
        <EditForm method="post" Model="banner" OnValidSubmit="DeleteBanner" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(banner is null)">Delete</button> |
            <a href="/banners">Back to List</a>
        </EditForm>
    }
</div>

@code {

    [Parameter] public int Id { get; set; }

    private Banner? banner;
    
    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        banner = await context.Banners.FirstOrDefaultAsync(m => m.Id == Id);

        if (banner is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteBanner()
    {
        using var context = DbFactory.CreateDbContext();
        context.Banners.Remove(banner!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/banners");
    }
}
